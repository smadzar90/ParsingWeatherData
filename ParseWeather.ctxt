#BlueJ class context
comment0.target=ParseWeather
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=
comment10.target=void\ testAverageTemperatureInFile()
comment11.params=
comment11.target=void\ testLowestHumidityInManyFiles()
comment12.params=
comment12.target=void\ testLowestHumidityInFile()
comment13.params=
comment13.target=void\ testColdestHourInFile()
comment14.params=args
comment14.target=void\ main(java.lang.String[])
comment2.params=largestRecord\ currRecord
comment2.target=org.apache.commons.csv.CSVRecord\ lowestThanTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment3.params=
comment3.target=void\ fileWithColdestTemperature()
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment5.params=lowest\ currRecord
comment5.target=org.apache.commons.csv.CSVRecord\ getLowerHumidity(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment6.params=
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment7.params=parser
comment7.target=java.lang.Double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment8.params=parser\ value
comment8.target=java.lang.Double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment9.params=
comment9.target=void\ testAverageTemperatureWithHighHumidityInFile()
numComments=15
